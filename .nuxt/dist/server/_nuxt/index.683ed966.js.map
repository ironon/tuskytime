{"version":3,"file":"index.683ed966.js","sources":["../../../../components/doption.vue","../../../../composables/getCourses.ts","../../../../components/Courses.vue","../../../../pages/study/join/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\n    const props = defineProps([\"selectedValue\", \"courses\", \"valueid\"])\r\n    const id = props.valueid\r\n    const selectedValue = useState(\"selectedValueFor\"+id, () => props.selectedValue)\r\n    const emit = defineEmits([\"changed\"])\r\n\r\n    const updateSelected = (e) => {\r\n        selectedValue.value = e.target.value\r\n        console.log(\"changed value for \" + id + \" to \" + selectedValue.value)\r\n        emit(\"changed\", id, selectedValue.value)\r\n    }\r\n\r\n</script>\r\n\r\n<template>\r\n\r\n    <select class=\"courseinput\" :id=\"valueid\" @change=\"updateSelected\" :value=\"selectedValue\">\r\n            <option v-for=\"course in props.courses\" :value=\"course\">{{course}}</option>\r\n        </select>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>","//todo alphabetize the course names\r\nimport allCourses from \"@/assets/courses.json\"\r\nvar toBeRemoved = []\r\n\r\nfunction removeEntry(gradeRange, courses) {\r\n    var i = courses['Grade'].indexOf(gradeRange)\r\n    courses['Name'].splice(i, 1)\r\n    courses['Code'].splice(i, 1)\r\n    courses['Prerequisite'].splice(i, 1)\r\n    courses['Credit'].splice(i, 1)\r\n    courses['Grade'].splice(i, 1)\r\n}\r\nexport var getCourses = (grade:any) => {\r\n    console.log(\"Getting courses!\")\r\n\r\n    if (grade == null) {\r\n        console.log(\"Grade is null :(\")\r\n        return allCourses\r\n    }\r\n    var courses = JSON.parse(JSON.stringify(allCourses))\r\n\r\n    function filterByGrade(courses) {\r\n        let i = 0; \r\n        while (i < courses['Grade'].length) {\r\n            var gradeRange = courses['Grade'][i]\r\n        \r\n            var index = i\r\n            var isWithinRange = false\r\n            if (gradeRange == grade) {\r\n                isWithinRange = true\r\n            }\r\n            if (gradeRange.includes(\",\")) {\r\n                isWithinRange = gradeRange.includes(grade)\r\n            }\r\n            if (gradeRange.includes(\"-\")) {\r\n                var range = gradeRange.split(\"-\")\r\n                // console.log(range[0] + \" < \" + grade + \" < \" + range[1])\r\n                isWithinRange = parseInt(range[0])-1 <= grade && parseInt(range[1])+1 >= grade\r\n            }\r\n            // console.log(courses['Name'][index] + \" is \" + isWithinRange)\r\n            if (!isWithinRange) {\r\n                removeEntry(gradeRange, courses)\r\n            } else {\r\n                i += 1\r\n            }\r\n        }\r\n        // courses['Grade'].forEach((gradeRange, index) => {\r\n            \r\n        // })\r\n        return courses\r\n    }\r\n    console.log(courses['Name'].length)\r\n    var filteredCourses = filterByGrade(courses)\r\n \r\n    console.log(filteredCourses)\r\n    return filteredCourses\r\n}\r\n\r\n\r\n","<script setup lang=\"ts\">\r\n    \r\n    var props = defineProps([\"grade\"])\r\n    var emit = defineEmits(['courseAdded'])\r\n   \r\n    var grade = props.grade\r\n    var selected = [null, null, null, null, null, null, null, null]\r\n    var courses = useState(\"courses\", () => getCourses(grade))\r\n    var optionChanged = (id, newValue) => {\r\n       \r\n        selected[id] = newValue\r\n        courses.value = getCourses(grade)\r\n        emit(\"courseAdded\", id, newValue)\r\n    }\r\n    \r\n    var courseNames = (id) => { \r\n        const currentCourses = courses.value\r\n        const result = currentCourses['Name'].filter((name) => {\r\n            if (selected.includes(name) && id != selected.indexOf(name)) {\r\n                console.log(\"Removing \" + name + \"!!\")\r\n                return false\r\n            }\r\n            \r\n            return true\r\n        })\r\n        return result\r\n    }\r\n\r\n</script>\r\n\r\n<template>\r\n    <div id=\"courses\">\r\n        <p>A Day:</p>\r\n        <Doption v-for=\"number in [0,1,2,3]\" :courses=\"courseNames(number)\" :valueid=\"number\" @changed=\"optionChanged\"></Doption>\r\n        <p>B Day:</p>\r\n        <Doption v-for=\"number in [4,5,6,7]\" :courses=\"courseNames(number)\" :valueid=\"number\" @changed=\"optionChanged\"></Doption>\r\n        \r\n        \r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n    #courses {\r\n        margin-top: 0.1rem;\r\n        margin-bottom: 1rem;\r\n        padding: 0.1rem;\r\n       \r\n        /* background-color: var(--lightish-main); */\r\n        display: flex;\r\n        flex-direction: column;\r\n        /* border: 1ch dotted var(--light-main); */\r\n    } \r\n    #courses select {\r\n        width: 20rem;\r\n    }\r\n\r\n</style>","<script setup lang=\"ts\">\r\n  let courses = []\r\n  let page = useState(() => 1)\r\n  const updateGrade = (event) => {\r\n      grade.value = event.target.value\r\n  }\r\n  const next = () => {\r\n    if (name.value != \"\" && grade.value != null) {\r\n        page.value += 1\r\n    } else {\r\n        alert(\"enter your name and grade bozo\")\r\n    }\r\n  }\r\n  const createAccount = async (event) => {\r\n    const info = {\r\n        \"grade\": grade.value,\r\n        \"name\": name.value,\r\n        \"courses\": courses\r\n    }\r\n    console.log(info)\r\n    await sendCreateAccount(info)\r\n    }\r\n    const updateCourse = (index, course) => {\r\n        courses[index] = course\r\n        console.log(course)\r\n    }\r\n    var grade = useState(\"grade\", () => null)\r\n    var name = useState('name', () => \"\")\r\n    \r\n    \r\n</script>\r\n\r\n<template>\r\n    <div id=\"join-page\">\r\n        <p>time to create an account ̶o̶r̶ ̶e̶l̶s̶e̶</p>\r\n        <div id=\"createaccount\">\r\n            <div id=\"page1\" v-if=\"(page==1)\">\r\n                <label for=\"pref-name\">name: </label>\r\n                <input id=\"pref-name\" v-model=\"name\" type=\"text\"/>\r\n                <label for=\"grade\">grade: </label>\r\n                <select id=\"grade\" :value=\"grade\" @input=\"updateGrade\">\r\n                <option v-for=\"value in [6,7,8,9,10,11,12]\" :value=\"value\">{{value}}</option>\r\n                </select>\r\n                <button @click=\"next\">NEXT</button>\r\n            </div>\r\n            <div id=\"page2\" v-if=\"(page==2)\">\r\n                <Courses :grade=\"grade\" @courseAdded=\"updateCourse\"></Courses>\r\n                <button id=\"create\" @click=\"createAccount\">CREATE!</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n     #join-page {\r\n            \r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n    }\r\n    #join-page label {\r\n        margin-top: 1rem;\r\n    }\r\n    #createaccount {\r\n        display: flex;\r\n        flex-direction: column;\r\n        \r\n    \r\n        /* flex-wrap:wrap; */\r\n       \r\n        flex-shrink: 2;\r\n        flex-grow: 2;\r\n        flex-basis: 10%;\r\n    }\r\n    #createaccount div {\r\n        flex-direction: column;\r\n        display: flex;\r\n\r\n    }\r\n    \r\n</style>\r\n\r\n"],"names":["id","props","selectedValue","useState","updateSelected","e","emit","removeEntry","gradeRange","courses","i","getCourses","grade","allCourses","filterByGrade","isWithinRange","range","filteredCourses","selected","optionChanged","newValue","courseNames","name","page","updateGrade","event","next","createAccount","info","sendCreateAccount","updateCourse","index","course"],"mappings":"+jBAEIA,EAAAC,EAAA,QACAC,EAAAC,EAAA,mBAAAH,EAAA,IAAAC,EAAA,aAAA,EAGAG,EAAAC,GAAA,CACIH,EAAA,MAAAG,EAAA,OAAA,MACA,QAAA,IAAA,qBAAAL,EAAA,OAAAE,EAAA,KAAA,EACAI,EAAA,UAAAN,EAAAE,EAAA,KAAA,CAAuC,8k7BCL/C,SAASK,EAAYC,EAAYC,EAAS,CACtC,IAAIC,EAAID,EAAQ,MAAS,QAAQD,CAAU,EACnCC,EAAA,KAAQ,OAAOC,EAAG,CAAC,EACnBD,EAAA,KAAQ,OAAOC,EAAG,CAAC,EACnBD,EAAA,aAAgB,OAAOC,EAAG,CAAC,EAC3BD,EAAA,OAAU,OAAOC,EAAG,CAAC,EACrBD,EAAA,MAAS,OAAOC,EAAG,CAAC,CAChC,CACW,IAAAC,EAAcC,GAAc,CAGnC,GAFA,QAAQ,IAAI,kBAAkB,EAE1BA,GAAS,KACT,eAAQ,IAAI,kBAAkB,EACvBC,EAEX,IAAIJ,EAAU,KAAK,MAAM,KAAK,UAAUI,CAAU,CAAC,EAEnD,SAASC,EAAcL,EAAS,CAC5B,IAAIC,EAAI,EACD,KAAAA,EAAID,EAAQ,MAAS,QAAQ,CAC5B,IAAAD,EAAaC,EAAQ,MAASC,GAG9BK,EAAgB,GAOhB,GANAP,GAAcI,IACEG,EAAA,IAEhBP,EAAW,SAAS,GAAG,IACPO,EAAAP,EAAW,SAASI,CAAK,GAEzCJ,EAAW,SAAS,GAAG,EAAG,CACtB,IAAAQ,EAAQR,EAAW,MAAM,GAAG,EAEhBO,EAAA,SAASC,EAAM,EAAE,EAAE,GAAKJ,GAAS,SAASI,EAAM,EAAE,EAAE,GAAKJ,CAC7E,CAEKG,EAGIL,GAAA,EAFLH,EAAYC,EAAYC,CAAO,CAIvC,CAIOA,OAAAA,CACX,CACQ,QAAA,IAAIA,EAAQ,KAAQ,MAAM,EAC9B,IAAAQ,EAAkBH,EAAcL,CAAO,EAE3C,eAAQ,IAAIQ,CAAe,EACpBA,CACX,iNCnDI,IAAAL,IAAA,MACAM,EAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,IAAA,EACAT,EAAAN,EAAA,UAAA,IAAAQ,EAAAC,CAAA,CAAA,EACAO,EAAA,CAAAnB,EAAAoB,IAAA,CAEIF,EAAAlB,GAAAoB,EACAX,EAAA,MAAAE,EAAAC,CAAA,EACAN,EAAA,cAAAN,EAAAoB,CAAA,CAAgC,EAGpCC,EAAArB,GACIS,EAAA,MACA,KAAA,OAAAa,GACIJ,EAAA,SAAAI,CAAA,GAAAtB,GAAAkB,EAAA,QAAAI,CAAA,GACI,QAAA,IAAA,YAAAA,EAAA,IAAA,EACA,IAGJ,EAAO,8tBCtBjB,IAAAb,EAAA,CAAA,EACAc,EAAApB,EAAA,IAAA,EAAA,aAAA,EACA,MAAAqB,EAAAC,GAAA,CACIb,EAAA,MAAAa,EAAA,OAAA,KAA2B,EAE/BC,EAAA,IAAA,CACEJ,EAAA,OAAA,IAAAV,EAAA,OAAA,KACIW,EAAA,OAAA,EAEA,MAAA,gCAAA,CACJ,EAEFI,EAAA,MAAAF,GAAA,CACE,MAAAG,EAAA,CAAa,MAAAhB,EAAA,MACM,KAAAU,EAAA,MACF,QAAAb,CACF,EAEf,QAAA,IAAAmB,CAAA,EACA,MAAAC,EAAAD,CAAA,CAA4B,EAE5BE,EAAA,CAAAC,EAAAC,IAAA,CACIvB,EAAAsB,GAAAC,EACA,QAAA,IAAAA,CAAA,CAAkB,EAEtB,IAAApB,EAAAT,EAAA,QAAA,IAAA,IAAA,EACAmB,EAAAnB,EAAA,OAAA,IAAA,EAAA"}